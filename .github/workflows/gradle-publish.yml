# This workflow will build a package using Gradle and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#Publishing-using-gradle

name: Gradle Package

on: [push]

jobs:
  environment:
    runs-on: ubuntu-latest
    steps:
#      - name: install docker-compose
#        run: sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
#      - name: apply executable permissions
#        run: sudo ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose
      - name: where am I?
        run: pwd
      - name: open project directory
        run: cd /home/runner/work/QA-Diploma-FQA19
      - name: Build the stack
        run: docker-compose -f "/home/runner/work/QA-Diploma-FQA19/docker-compose.yml" up -d --build
      - name: Check running containers
        run: docker ps -a

  test:
    needs: environment
    runs-on: ubuntu-latest
    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
#      - name: sleep
#        uses: jakejarvis/wait-action@master
#        with:
#          time: '30s'
      - name: Run SUT
        run: java -Dspring.datasource.url=jdbc:postgresql://localhost:5432/db -jar artifacts/aqa-shop.jar &
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build with Gradle
        run: ./gradlew test -Dselenide.headless=true --info

#
#
#  setup:
#    runs-on: ubuntu-latest
#    steps:
#      - run: ./setup_server.sh
#  build:
#    needs: setup
#    runs-on: ubuntu-latest
#    steps:
#      - run: ./build_server.sh
#  1:
#    needs: build
#    runs-on: ubuntu-latest
#    steps:
#      - run: ./test_server.sh
